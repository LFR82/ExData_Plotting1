submit()
submit()
skip()
0
bye()
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex", "class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
ski()
skip()
submit()
passed
failed
mutate(passed, status, character="passed")
mutate(passed, status, "passed")
mutate(passed, status, passed)
mutate(passed, status="passed")
passed <- passed %>% mutate(status="passed")
failed <- failed %>% mutate(status="failed")
rbind_list(passed, failed)
sat
submit()
submit()
reset()
submit
submit()
submit()
submit()
?group_by
submit()
submit()
submit()
url1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url1, destfile="gdp.csv")
download.file(url2, destfile="education.csv")
gdpdat = read.csv("gdp.csv", stringsAsFactors=FALSE, header=TRUE)
#gdpdat = read.csv("gdp.csv", header=TRUE)
edudat = read.csv("education.csv", stringsAsFactors=FALSE, header=TRUE)
#edudat = read.csv("education.csv", header=TRUE)
cleangdpdat = gdpdat[5:194, ]
#names(cleangdpdat) <- c("countrycode", "ranking", "NA","country", "gdp")
# cleangdpdat$gdp = as.integer("cleangdpdat$gdp")#NAs introduced by coercion? for ranking in descending order
mergeddata = merge(cleangdpdat, edudat, by.x="X", by.y="CountryCode", all=FALSE)
mergeddata$Gross.domestic.product.2012 = as.numeric(as.character(mergeddata$Gross.domestic.product.2012))
arrange(mergeddata, desc(Gross.domestic.product.2012))
library(plyr)
arrange(mergeddata, desc(Gross.domestic.product.2012))
library(Hmisc)
mergeddata$gdp = cut2(mergeddata$Gross.domestic.product.2012, g=5)
table(mergeddata$Income.Group, mergeddata$gdp)
#Read data
trainsetdat <- read.table("X_train.txt", header=FALSE)
testsetdat <- read.table("X_test.txt", header=FALSE)
trainlabdat <- read.table("y_train.txt", header=FALSE)
testlabdat <- read.table("y_test.txt", header=FALSE)
testsubject <- read.table("subject_test.txt", header=FALSE)
trainsubject <- read.table("subject_train.txt", header=FALSE)
features <- read.table("features.txt", colClasses=c("character"))
activiy_labels <- read.table("activity_labels.txt", col.names= c("ActivityId", "Activity"))
#Overview of datasets
dim(trainsetdat)#7351 rows, 561 cols
dim(trainlabdat)#7351 rows, 1 col
dim(testsetdat)#2946 rows, 561 cols
dim(testlabdat)#2946 rows, 1 col
dim(testsubject)#2946 rows, 1 col
dim(trainsubject)#7351 rows, 1 col
#Merges the training and the test sets to create one data set.
training <- cbind(cbind(trainsetdat, trainsubject), trainlabdat)
sensor <- cbind(cbind(testsetdat, testsubject), testlabdat)
fulldata <- rbind(training, sensor)
#Tidy up table, remove columns "()"
features[,2] = gsub('-mean', 'Mean', features[,2])
features[,2] = gsub('-std', 'Std', features[,2])
features[,2] = gsub('[-()]', '', features[,2])
# Extract mean and standard deviation
meanstd <- grep(".*Mean.*|.*Std.*", features[,2])
# Filter out unwanted rows from table
features <- features[meanstd,]
# Add last two columns (subject and activity)
meanstd <- c(meanstd, 562, 563)
# Subset data to only keep variables we want
fulldata <- fulldata[,meanstd]
# Add column (features) to fulldata
colnames(fulldata) <- c(features$V2, "Activity", "Subject")
colnames(fulldata) <- tolower(colnames(fulldata))
currentActivity = 1
for (currentActivityLabel in activity_labels$V2) {
fulldata$activity <- gsub(currentActivity, currentActivityLabel, fulldata$activity)
currentActivity <- currentActivity + 1
}
fulldata$activity <- as.factor(fulldata$activity)
fulldata$subject <- as.factor(fulldata$subject)
tidy = aggregate(fulldata, by=list(activity = fulldata$activity, subject=fulldata$subject), mean)
# Remove subject and activity columns
tidy[,90] = NULL
tidy[,89] = NULL
write.table(tidy, "tidy.txt", sep="\t", row.name=FALSE)
library(lattice)
library(datasets)
xyplot(Ozone~Wind,data=airquality)
library(datasets)
library(lattice)
airquality <- transform(airquality,Month=factor(Month))
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))
library(datasets)
library(lattice)
airquality <- transform(airquality,Month=factor(Month))#convert Month into factor variable
xyplot(Ozone~Wind|Month,data=airquality,layout=c(3,2))#plot ozone and wind by month, which creates multi-panel plots
library(datasets)
library(lattice)
airquality <- transform(airquality,Month=factor(Month))#convert Month into factor variable
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))#plot ozone and wind by month, which creates multi-panel plots
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x+f-f*x+rnorm(100, sd=0.5)
f<- factor(f, labels=c("Group1", "Group2"))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y...)
panel.abline(h=median(y), lty=2)
})
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x+f-f*x+rnorm(100, sd=0.5)
f <- factor(f, labels=c("Group1", "Group2"))
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y...)
panel.abline(h=median(y), lty=2)
})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=median(y), lty=2)
})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each=50)
y <- x+f-f*x+rnorm(100, sd=0.5)
f <- factor(f, labels=c("Group1", "Group2"))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
})
?panel.lmline
ggplot2.org
library(ggplot2)
str(mpg)
qplot(displ,hwy, data=mpg)
qplot(displ,hwy,data=mpg, color=drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12,mean=rep(1:3, each=4),sd=0.2)
y <- rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19, cex=2)
text(x+0.05, y+0.05, labels=as.character(1:12))#label each point using text function
dataFrame <- data.frame(x=x,y=y)
dist(dataFrame)#calculate distance between two different points, takes a dataframe, returns all pair-wise
#distances, default returns Euclidean distance matrix
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
distxy
hClustering <- hclust(distxy)
plot(hClustering)
hClustering
myplclust <- function(hclust, lab=hclust$labels,lab.col=rep(1, length(hclust$labels)),hang=0.1,...){
y <- rep(hclust$height,2)
x<- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust,labels=FALSE,hang=hang,...)
text(x=x, y=y[hclust$order] - (max(hclust$height)*hang),labels=lab[hclust$order],
col=lab.col[hclust$order],srt=90, adj=c(1,0.5),xpd=NA,...)
}
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
myphclust(hClustering,lab=rep(1:3,each=4),lab.col=rep(1:3,each=4))
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
myplclust(hClustering,lab=rep(1:3,each=4),lab.col=rep(1:3,each=4))
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(1:3,each=4),sd=0.2)
y <- rnorm(12, mean=rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
dataFrame <- data.frame(x,y)
dataFrame <- data.frame(x,y)
kmeansobj <- kmeans(dataFrame,centers=3)
names(kmeansobj)
kmeansobj$cluster
par(mar=rep(0.2,4))
plot(x,y,col=kmeansobj$cluster,pch=19,cex=2)
par(mar=rep(0.2,4))
plot(x,y,col=kmeansobj$cluster,pch=19,cex=2)
points(kmeansobj$centers,col=1:3,pch=3,cex=3,lwd=3)
?plot
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
kmeansobj2 <- kmeans(dataMatrix,centers=3)
par(mfrow=c(1,2),mar=c(2,4,0.1,0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1],yaxt="n")
image(t(dataMatrix)[,order(kmeansobj$cluster)],yaxt="n")
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
set.seed(678910)
for(i in 1:40){
coinFlip <- rbinom(1, size=1, prob=0.5)
if(coinFlip){
dataMatrix[i,] <- dataMatrix[i,]+rep(c(0,3), each=5)
}
}
par(mar=rep(0.2.4))
image(1:10, 1:40, t(dataMatrix)[.mrpw(dataMatrix):1])
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[.mrpw(dataMatrix):1])
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2.4))
heatmap(dataMatrix)
par(mar=rep(0.2,4))
heatmap(dataMatrix)
hh<- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab="Row Mean", ylab="Row", pch=19)
plot(colMeans(dataMatrixOrdered), xlab="Column",ylab="Column Mean", pch=19)
pal <- colorRamp(c("Red","Blue"))
pal(0)
pal(1)
pal(seq(0,1,len=10))
pal <- colorRampPalette(c("red","yellow"))
pal(2)
pal(10)
install.packages(RColorBrewer)
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3,"BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano,col=pal(20))
?brewer.pal
pal <- colorRampPalette(cols)
image(volcano,col=pal(20))
x <- rnorm(1000)
y <- rnorm(1000)
smoothScatter(x,y)
plot(x,y,pch=19)
plot(x,y,col=rgb(0,0,0,0.2),pch=19)
setwd("~/Exploratory Analysis_CourseProject1")
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
head(electricpowerdat,1)
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, %d %m %Y)
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(Global_active_power,
xlab="Global Active Power (kilowatts)",
main="Global Active Power",
col="red", ylab=”Frequency”))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d%m%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(Global_active_power,main="Global Active Power",
xlab="Global Active Power (kilowatts)",
, ylab= ”Frequency” ,col="red"))
dev.off()
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d%m%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(Global_active_power,main="Global Active Power",
xlab="Global Active Power (kilowatts)",
, ylab= "Frequency" ,col="red"))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d%m%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = "red"))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d%m%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(subsetdat$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = "red"))
dev.off()
png("plot1.png")
with(subsetdat, hist(subsetdat$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = 'red'"'))
dev.off()
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(subsetdat$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = 'red'"'))
dev.off()
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"|electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(subsetdat$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = 'red'"'))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d%m%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"& electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(subsetdat$Global_active_power, main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = 'red'"'))
dev.off()
DT <- read.table("household_power_consumption.txt", header=TRUE, sep= ";", colClasses = c(rep("character", 2), rep("numeric", 7)), na.strings = "?")
##putting datas as date
DT$Date<-as.Date(DT$Date, "%d/%m/%Y")
##getting subdatas
subDT <- DT[DT$Date >= "2007-02-01" & DT$Date <= "2007-02-02",]
##setting canvas with plotname plot1.png with 480x480 pixeles
png(filename = "plot1.png", width = 480, height = 480, units = "px", bg = "white")
with(subDT, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red"))
dev.off()
DT <- read.table("household_power_consumption.txt", header=TRUE, sep= ";", colClasses = c(rep("character", 2), rep("numeric", 7)), na.strings = "?")
##putting datas as date
DT$Date<-as.Date(DT$Date, "%d/%m/%Y")
##getting subdatas
subDT <- DT[DT$Date >= "2007-02-01" & DT$Date <= "2007-02-02",]
##setting canvas with plotname plot1.png with 480x480 pixeles
png(filename = "plot1.png", width = 480, height = 480, units = "px", bg = "white")
with(subDT, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red"))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <-  as.Date(electricpowerdat$Date, "%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "2007-02-01"| electricpowerdat$Date=="2007-02-02",]
#Recreate plot1
png("plot1.png")
with(subsetdat, hist(Global_active_power, main= "Global Active Power", xlab="Global Active Power (kilowatts)", ylab= "Frequency" ,col = 'red'"'))
dev.off()
)
)
)
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
#Subset data to reflect the two dates
subsetdat <- electricpowerdat[electricpowerdat$Date == "1/2/2007"|electricpowerdat$Date=="2/2/2007",]
#Recreate plot1
png("plot1.png")
hist(subsetdat$Global_active_power,
xlab="Global Active Power (kilowatts)",
main="Global Active Power", ylab="Frequency",
col="red")
dev.off()
data = read.table("household_power_consumption.txt", sep=";",
header=TRUE, na.strings="?")
data$Date = as.Date(data$Date, format="%d/%m/%Y")
subData = subset(data, Date >= "2007-02-01" & Date <= "2007-02-02")
subData$Fulldate = paste(subData$Date, subData$Time)
subData$day = as.POSIXct(subData$Fulldate)
subData[, 3] = as.double(subData[, 3])
png("plot2.png", width=480, height=480)
plot(subData$day , subData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)",xlab="")
dev.off()
head(data,1)
?as.double
head(subsetdat,1)
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
head(subsetdat,1)
subsetdat[,3]
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
subsetdat[,3] <- as.double(subsetdat[ ,3])
png("plot2.png")
plot(subsetdat$day, subsetdat$Global_active_power, type="l",ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
subsetdat[,3] <- as.double(subsetdat[ ,3])
#Recreate plot2
png("plot2.png")
plot(subsetdat$day, subsetdat$Global_active_power, type="l",ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
head(subsetdat,1)
?legend
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
#Recreate plot3
png("plot3.png")
plot(subsetdat$day, subsetdat[ ,7], type="l", ylab="Energy sub metering", xlab="", col="black")
lines(subsetdat$day, subsetdat[ ,8], type="l", col="red")
lines(subsetdat$day, subsetdat[ ,9], type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
#Recreate plot3
png("plot3.png")
plot(subsetdat$day, subsetdat[ ,7], type="l", ylab="Energy sub metering", xlab="", col="black")
lines(subsetdat$day, subsetdat[ ,8], type="l", col="red")
lines(subsetdat$day, subsetdat[ ,9], type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lwd=c(2,2))
dev.off()
electricpowerdat <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, na.strings=c("?"))
electricpowerdat$Date <- as.Date(electricpowerdat$Date, format="%d/%m/%Y")
#Subset data to reflect the two dates
subsetdat <- subset(electricpowerdat, Date >= "2007-02-01" & Date <="2007-02-02")
subsetdat$Fulldate <- paste(subsetdat$Date, subsetdat$Time)
subsetdat$day <- as.POSIXct(subsetdat$Fulldate)
#Recreate plot4
png("plot4.png")
par(mfrow=c(2,2))
#Plot1
subsetdat[ ,3] = as.double(subsetdat[,3])
plot(subsetdat$day, subsetdat$Global_active_power, type="l", ylab="Global Acive Power", xlab="")
#Plot2
plot(subsetdat$day, subsetdat$Voltage, type="l", ylab="Voltage", xlab="datetime")
#Plot3
plot(subsetdat$day, subsetdat[ ,7], type="l", ylab="Energy sub metering", xlab="", col="black")
lines(subsetdat$day, subsetdat[ ,8], type="l", col="red")
lines(subsetdat$day, subsetdat[ ,9], type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black","red","blue"),lwd=c(2,2), bty="n")
#Plot4
plot(subsetdat$day, subsetdat$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
